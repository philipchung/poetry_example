[tool.poetry]
name = "poetry-example"
version = "0.1.0"
description = "Example repo for using poetry for machine learning projects."
authors = ["Philip Chung <philip.f.chung@gmail.com>"]
readme = "README.md"
packages = [{include = "poetry_example"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pandas = "^2.0.3"
matplotlib = "^3.7.2"
ipykernel = "^6.25.1"
ipywidgets = "^8.1.1"
scipy = "^1.11.2"

[tool.poetry.group.gcp.dependencies]
google-cloud-bigquery = "^3.11.4"

[tool.poetry.group.llm.dependencies]
transformers = "^4.33.1"
huggingface-hub = {extras = ["cli"], version = "^0.17.1"}
db-dtypes = "^1.1.1"
accelerate = "^0.23.0"
einops = "^0.6.1"
langchain = "^0.0.292"
openai = "^0.28.1"

### Comment out for GPU torch install
[tool.poetry.group.cpu]
optional = true

[tool.poetry.group.cpu.dependencies]
torch = "^2.1.0"
torchvision = "^0.16.0"
torchaudio = "^2.1.0"

### Comment out for CPU torch install
# [tool.poetry.group.gpu]
# optional = true

# [tool.poetry.group.gpu.dependencies]
# xformers = "^0.0.21"
# bitsandbytes = "^0.41.1"
# torch = {version = "^2.1.0+cu118", source = "pytorch-gpu-src"}
# torchvision = {version = "^0.16.0+cu118", source = "pytorch-gpu-src"}
# torchaudio = {version = "^2.1.0+cu118", source = "pytorch-gpu-src"}

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
ruff = "^0.0.284"
mypy = "^1.5.0"

[[tool.poetry.source]]
name = "pytorch-gpu-src"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.ruff]
ignore = []
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
# Same as Black.
line-length = 100
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
pretty = true
color_output = true
show_column_numbers = true
show_error_context = true
show_error_codes = true
ignore_missing_imports = true
follow_imports = "normal"
# Warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
# Additional Checks
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
# Make sure we are using MyPy
disallow_untyped_calls = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--import-mode=importlib",
]
pythonpath=["."]
testpaths = [
    "tests",
]